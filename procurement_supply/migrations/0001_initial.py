# Generated by Django 4.1.7 on 2023-08-15 17:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("company", models.CharField(max_length=50)),
                ("position", models.CharField(max_length=50)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("purchaser", "закупщик"),
                            ("supplier", "поставщик"),
                            ("admin", "админ"),
                        ],
                        default="purchaser",
                        max_length=10,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Список пользователей",
                "ordering": ("id",),
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30, unique=True)),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Список категорий",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="ChainStore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("address", models.CharField(max_length=150)),
                ("phone", models.CharField(max_length=50)),
            ],
            options={
                "verbose_name": "Розничный магазин",
                "verbose_name_plural": "Список розничных магазинов",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Characteristic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "verbose_name": "Характеристика",
                "verbose_name_plural": "Список характеристик",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("saved", "сохранен"), ("cancelled", "отменен")],
                        default="saved",
                        max_length=15,
                    ),
                ),
                (
                    "chain_store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="procurement_supply.chainstore",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказ",
                "verbose_name_plural": "Список заказов",
                "ordering": ("-date", "purchaser"),
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="procurement_supply.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт",
                "verbose_name_plural": "Список продуктов",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Purchaser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Закупщик",
                "verbose_name_plural": "Список закупщиков",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                ("order_status", models.BooleanField(default=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Поставщик",
                "verbose_name_plural": "Список поставщиков",
                "ordering": ("-order_status", "name"),
            },
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("sku", models.CharField(max_length=30)),
                ("model", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=16,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "price_rrc",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=16,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stocks",
                        to="procurement_supply.product",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stocks",
                        to="procurement_supply.supplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Запас продукта",
                "verbose_name_plural": "Список запасов продукта",
                "ordering": ("product", "price"),
            },
        ),
        migrations.CreateModel(
            name="ShoppingCart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "purchaser",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shopping_cart",
                        to="procurement_supply.purchaser",
                    ),
                ),
            ],
            options={
                "verbose_name": "Корзина",
                "verbose_name_plural": "Список корзин",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="ProductCharacteristic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=30)),
                (
                    "characteristic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_characteristics",
                        to="procurement_supply.characteristic",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_characteristics",
                        to="procurement_supply.stock",
                    ),
                ),
            ],
            options={
                "verbose_name": "Характеристика запаса продукта",
                "verbose_name_plural": "Список характеристик запаса продукта",
                "ordering": ("stock", "value"),
            },
        ),
        migrations.CreateModel(
            name="PasswordResetToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("token", models.UUIDField(default=uuid.uuid4)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Токен сброса пароля",
                "verbose_name_plural": "Токены сброса пароля",
            },
        ),
        migrations.CreateModel(
            name="OrderPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=16,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                ("confirmed", models.BooleanField(default=False)),
                ("delivered", models.BooleanField(default=False)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_positions",
                        to="procurement_supply.order",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_positions",
                        to="procurement_supply.stock",
                    ),
                ),
            ],
            options={
                "verbose_name": "Позиция заказа",
                "verbose_name_plural": "Список позиций заказов",
                "ordering": ("order", "price"),
            },
        ),
        migrations.AddField(
            model_name="order",
            name="purchaser",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="orders",
                to="procurement_supply.purchaser",
            ),
        ),
        migrations.AddField(
            model_name="chainstore",
            name="purchaser",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chain_stores",
                to="procurement_supply.purchaser",
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="suppliers",
            field=models.ManyToManyField(
                blank=True, related_name="categories", to="procurement_supply.supplier"
            ),
        ),
        migrations.CreateModel(
            name="CartPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=16,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "shopping_cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart_positions",
                        to="procurement_supply.shoppingcart",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart_positions",
                        to="procurement_supply.stock",
                    ),
                ),
            ],
            options={
                "verbose_name": "Позиция корзины",
                "verbose_name_plural": "Список позиций корзин",
                "ordering": ("shopping_cart",),
            },
        ),
        migrations.AddConstraint(
            model_name="stock",
            constraint=models.UniqueConstraint(
                fields=("sku", "product", "supplier"), name="unique_stock"
            ),
        ),
        migrations.AddConstraint(
            model_name="productcharacteristic",
            constraint=models.UniqueConstraint(
                fields=("stock", "characteristic"), name="unique_product_characteristic"
            ),
        ),
        migrations.AddConstraint(
            model_name="orderposition",
            constraint=models.UniqueConstraint(
                fields=("order", "stock"), name="unique_order_stock"
            ),
        ),
        migrations.AddConstraint(
            model_name="cartposition",
            constraint=models.UniqueConstraint(
                fields=("shopping_cart", "stock"), name="unique_shopping_cart_stock"
            ),
        ),
    ]
